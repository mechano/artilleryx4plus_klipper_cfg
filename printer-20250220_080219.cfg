[include mainsail.cfg]

[include adxl345.cfg] # Uncomment for resonance testing

[include MCU_ID.cfg]

[include macro.cfg]
[include shell_command.cfg]

[mcu rpi]
serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None
#spi_bus: spidev0.0
#axes_map:-x, -y, -z

[temperature_sensor host]
sensor_type: temperature_host
min_temp: 0
max_temp: 80
 
[temperature_sensor mcu]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 80

[stepper_x]
step_pin:PC14
dir_pin:!PC13
enable_pin:!PC15
microsteps: 16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin:!PC0
endstop_pin:tmc2209_stepper_x:virtual_endstop
position_min: -6
position_endstop: -6
position_max: 310
homing_speed:40
homing_retract_dist:0
homing_positive_dir:false
step_pulse_duration:0.000002

[stepper_y]
step_pin:PB7
dir_pin:!PB6
enable_pin:!PB8
microsteps:16
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin:!PC1
endstop_pin:tmc2209_stepper_y:virtual_endstop
position_min: -10
position_endstop:-10 
position_max:310
homing_speed:40
homing_retract_dist:0
homing_positive_dir:false
step_pulse_duration:0.000002

[stepper_z]
step_pin:PC10
dir_pin:!PA15
enable_pin: !PC11
microsteps: 16
rotation_distance: 8
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_max: 405
position_min: -5 
homing_speed:20

[extruder]
step_pin:PB1
dir_pin:!PB2
enable_pin:!PB0
microsteps:16
rotation_distance: 4.706#31.4	#Bondtech 5mm Drive Gears
#gear_ratio: 52:10
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
min_temp: -100
max_temp: 330
heater_pin: PA7
sensor_type:EPCOS 100K B57560G104F
sensor_pin: PA1
max_power: 1
#control :pid
#pid_kp : 26.213 
#pid_ki : 1.304
#pid_kd : 131.721 
pressure_advance: 0.03
pressure_advance_smooth_time: 0.02
max_extrude_cross_section:500
instantaneous_corner_velocity: 5.000
max_extrude_only_distance: 500
max_extrude_only_velocity:500
max_extrude_only_accel:8000
step_pulse_duration:0.000002
min_extrude_temp:0
smooth_time: 2.0

[homing_override]
set_position_z:0
gcode: 
    bed_mesh_clear
    G91
    G1 Z5 F120
    G90
    {% if params.X is defined %}
    {% if params.Y is undefined %}
    {% if params.Z is undefined %}
    G28 X
    {% endif %}
    {% endif %}
    {% endif %}
    {% if params.Y is defined %}
    {% if params.X is undefined %}
    {% if params.Z is undefined %}
    G28 Y
    {% endif %}
    {% endif %}
    {% endif %}
    {% if params.Z is defined %}
    {% if params.X is undefined %}
    {% if params.Y is undefined %}
    G28 Y
    G28 X
    G1 X160 Y165 F3000
    {% set z_max = printer.toolhead.axis_maximum.z-6|int %} 
    SET_KINEMATIC_POSITION Z={z_max}
    probe probe_speed=5 samples=5
    {% set probe_offset=-(printer.configfile.settings['probe'].z_offset) %}
    G91
    G1 Z{probe_offset}  F300
    G90
    SET_KINEMATIC_POSITION Z=0
    G91 
    G1 Z5 F300
    G90
    # G28 Z
    {% endif %}
    {% endif %}
    {% endif %}
    {% if params.X is defined %}
    {% if params.Y is defined %}
    {% if params.Z is undefined %}
    G28 Y
    G28 X
    {% endif %}
    {% endif %}
    {% endif %}
    {% if params.X is undefined %}
    {% if params.Y is undefined %}
    {% if params.Z is undefined %}
    G28 Y
    G28 X
    G1 X160 Y165 F3000
    # G28 Z
    {% set z_max = printer.toolhead.axis_maximum.z-5|int %} 
    SET_KINEMATIC_POSITION Z={z_max}
    probe probe_speed=5 samples=5
    {% set probe_offset=-(printer.configfile.settings['probe'].z_offset) %}
    G91
    G1 Z{probe_offset} F300
    G90
    SET_KINEMATIC_POSITION Z=0 
    G91 
    G1 Z5 F300
    G90
    {% endif %}
    {% endif %}
    {% endif %}
    G90       
    BED_MESH_PROFILE LOAD="default"

; [safe_z_home]
; home_xy_position: 160, 165
; speed: 100
; z_hop: 10
; z_hop_speed: 5

[probe]
pin:PA8
x_offset:-17
y_offset: 17
#z_offset: 0.00
speed: 10.0
samples: 2
samples_result: average
sample_retract_dist: 5.0
samples_tolerance: 0.03
samples_tolerance_retries: 3

# Needed by adaptive mesh
[exclude_object]

[bed_mesh]
speed:120                
horizontal_move_z:10     
mesh_min:15,20           
mesh_max:285,280
probe_count:7,7         
algorithm:bicubic 
bicubic_tension:0.2
mesh_pps: 4, 4   

[verify_heater extruder]
max_error: 120
check_gain_time:5
hysteresis: 5
heating_gain: 1

[heater_bed]
heater_pin:PB10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
max_power: 1.0
#control = pid
#pid_kp = 71.039
#pid_ki = 2.223
#pid_kd = 567.421
min_temp: -100
max_temp: 200

[verify_heater heater_bed]
max_error: 120
check_gain_time:300
hysteresis: 3
heating_gain: 1

#fan for printed model FAN1
[fan]
pin:PA4
max_power: 0.8
shutdown_speed: 0
cycle_time: 0.010
hardware_pwm: False
kick_start_time: 0.100
off_below: 0.0

#fan for printed model FAN0
[heater_fan hotend_fan]
pin: PC7
shutdown_speed: 1
heater_temp: 45.0

[controller_fan case_fan]
pin: PC9
fan_speed: 1.0
kick_start_time: 0.200
stepper: stepper_x, stepper_y, stepper_z

[printer]
kinematics:cartesian
max_velocity: 500
max_accel: 10000
#max_accel_to_decel: 5000
max_z_velocity: 30
max_z_accel: 200
square_corner_velocity: 5.0

[input_shaper]
#shaper_type_x: mzv
#shaper_freq_x: 99.6

#shaper_type_y: 2hump_ei
#shaper_freq_y: 41.0

[idle_timeout]
timeout: 36000

####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

#[safe_z_home]
#home_xy_position: 215,215 
#speed: 100
#z_hop: 10                 
#z_hop_speed: 5

[output_pin lightbar]
pin: rpi:gpiochip2/gpio15
pwm: false
shutdown_value: 0

[filament_switch_sensor fila]
pause_on_runout: True
runout_gcode:
     SET_FILAMENT_SENSOR SENSOR=fila ENABLE=1
event_delay: 5.0
pause_delay: 5.0
switch_pin: PA6

########################################
# TMC UART configuration
########################################

[tmc2209 stepper_x]
uart_pin: PB9
run_current: 1.1
hold_current: 0.8
interpolate: True
stealthchop_threshold:0
driver_SGTHRS:70
diag_pin:^PC0

[tmc2209 stepper_y]
uart_pin: PB5
run_current: 1.2
hold_current: 0.8
interpolate: True
stealthchop_threshold:0
driver_SGTHRS:90
diag_pin:^PC1

# [tmc2209 stepper_z]
# uart_pin: PC12
# run_current: 0.8
# hold_current: 0.8
# interpolate: True
# stealthchop_threshold: 120

[tmc2209 stepper_z]
uart_pin: PC4
run_current: 1.1
hold_current: 0.8
interpolate: True
stealthchop_threshold: 0

[tmc2209 extruder]
uart_pin: PC5
run_current: 0.8
hold_current: 0.8
interpolate: True
stealthchop_threshold: 0

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    100, 100, 20  # an example
#min_freq: 5
#max_freq: 70
#accel_per_hz:140

[force_move]
enable_force_move : true

[display_status]
  
[gcode_arcs]

#[output_pin LAMP]
#pin:PA8
#shutdown_value: 0.0

[neopixel my_neopixel]
pin:PA3
chain_count:1
color_order:GRB
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

[gcode_macro NEOPIXEL_DISPLAY]
gcode:
    {% set led = params.LED %}
    {% set type = params.TYPE %}
    {% set mode = params.MODE %}
    {% set my_neopixel = printer.configfile.config['neopixel ' ~ led] %}

    {% if mode == 'progress' %}
        {% for i in range(my_neopixel.chain_count|int) %}
            SET_LED_TEMPLATE LED={led} INDEX={i+1} TEMPLATE={'led_' ~ type ~ '_' ~ mode} param_led_num={i+1} param_led_total={my_neopixel.chain_count|int}
        {% endfor %}
    {% endif %}
    {% if mode == 'glow' %}
        SET_LED_TEMPLATE LED={led} TEMPLATE={'led_' ~ type ~ '_' ~ mode}
    {% endif %}


[display_template led_extruder_temp_glow]
text:
    {% if printer.extruder.target > 0.0 %}
        {%  set temp = printer.extruder.target %}
    {% else %}
        {% set temp = printer.configfile.config.extruder.max_temp %}
    {% endif %}
    {% set ratio = printer.extruder.temperature / temp|float %}
    {0.5}, 0.0, {1-ratio}, 0.0

[display_template led_bed_temp_glow]
text:
    {% if printer.heater_bed.target > 0.0 %}
        {%  set temp = printer.heater_bed.target %}
    {% else %}
        {% set temp = printer.configfile.config.heater_bed.max_temp %}
    {% endif %}
    {% set ratio = printer.heater_bed.temperature / temp|float %}
    {0.1}, 0.0, {0.5-ratio}, 0.0


[display_template led_print_percent_progress]
param_led_num:  0
param_led_total: 1
text:
        1, 1, 1, 0.0

[gcode_macro NEOPIXEL_INVERT]
description: Helper: Light
gcode:
  {% set flag=printer["neopixel my_neopixel"].color_data[0][2] %}
  {% if flag==0 %}
    SET_LED LED="my_neopixel" RED=1 GREEN=1 BLUE=1 SYNC=0 TRANSMIT=1
    {action_respond_info("my_neopixel on")}
  {% else %}
    SET_LED LED="my_neopixel" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1
    {action_respond_info("my_neopixel off")}
  {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 34.544
#*# pid_ki = 14.393
#*# pid_kd = 20.727
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.743
#*# pid_ki = 0.855
#*# pid_kd = 1422.764
#*#
#*# [probe]
#*# z_offset = 1.590
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.002500, -0.053750, -0.073750, -0.037500, -0.043750, -0.030000, 0.015000
#*# 	0.037500, 0.001250, -0.001250, 0.021250, 0.013750, 0.012500, 0.030000
#*# 	0.027500, 0.012500, 0.018750, 0.051250, 0.040000, 0.013750, 0.027500
#*# 	0.010000, -0.001250, 0.011250, 0.045000, 0.021250, -0.015000, 0.006250
#*# 	-0.027500, -0.031250, -0.020000, 0.006250, -0.013750, -0.021250, -0.011250
#*# 	-0.021250, -0.038750, -0.055000, -0.030000, -0.051250, -0.043750, 0.000000
#*# 	-0.003750, -0.062500, -0.101250, -0.096250, -0.071250, -0.056250, 0.016250
#*# tension = 0.2
#*# min_x = 15.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 4
#*# min_y = 20.0
#*# x_count = 7
#*# max_y = 279.97999999999996
#*# mesh_x_pps = 4
#*# max_x = 285.0
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 77.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 32.6
